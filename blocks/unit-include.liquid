
<div id="variantAdditionalInfoWrapper-{{ section.id }}">
  {%- assign init_variant = product.selected_or_first_available_variant -%}
  <div id="variantAdditionalInfo-{{ section.id }}">
    {{ init_variant.metafields.custom.unit_include }}
  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const quantitySelector = document.querySelector(".quantity-selector");
    const customquantityInput = quantitySelector.querySelector("input[name='quantity']");
    const minusBtn = quantitySelector.querySelector("button[name='minus']");
    const plusBtn = quantitySelector.querySelector("button[name='plus']");

    const infoBox = document.getElementById("variantAdditionalInfo-{{ section.id }}");

    // Keep track of currently selected variant's unit_include
    let currentUnitInclude = {{ init_variant.metafields.custom.unit_include | default: 0 | json }};

    function updateVariantInfo() {
      const qty = parseInt(customquantityInput.value) || 1;
      const result = currentUnitInclude * qty;
      infoBox.textContent = currentUnitInclude > 0
        ? `You will receive ${result} units`
        : "";
    }

    // Listen for quantity changes
    customquantityInput.addEventListener("input", updateVariantInfo);
    minusBtn.addEventListener("click", () => setTimeout(updateVariantInfo, 0));
    plusBtn.addEventListener("click", () => setTimeout(updateVariantInfo, 0));

    // Listen for variant change (Shopify triggers this event in Dawn & OS 2.0 themes)
    document.addEventListener("variant:change", function(event) {
      const variant = event.detail.variant;
      if (!variant) return;

      // Update currentUnitInclude from our global object
      currentUnitInclude = window.variantUnitIncludes[variant.id] || 0;
      updateVariantInfo();
    });

    // Initialize once on page load
    updateVariantInfo();
  });
</script>





{% schema %}
{
  "name": "Unit Include",
  "settings": [],
  "presets": [
    {
      "category": "Custom Block",
      "name": "Unit Include"
    }
  ]
}
{% endschema %}


